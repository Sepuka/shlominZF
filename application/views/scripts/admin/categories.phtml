<script language="javascript" type="text/javascript">
Ext.onReady(function() {
	var URLcategoriesAll = '/admin/categoriesView';
	var URLcategoriesEdit = '/admin/categoriesEdit';
	var URLcategoriesAdd = '/admin/categoriesAdd';
	var URLcategoriesDel = '/admin/categoriesDel';
	var currentRowGrid = 0;

	var loadMaskGrid = new Ext.LoadMask(
	    Ext.getBody(),
	    {
	        msg: 'Пожалуйста, подождите. Идет загрузка ...'
	    });

    // Функция отправки данных для удаления
    function confirmDelete(btn) {
        if (btn == 'yes') {
            loadMaskGrid.show();
            Ext.Ajax.request({
                url: URLcategoriesDel,
                method: 'POST',
                params: {
                    id: currentRowGrid
                },
                success: function(answer) {
                    //alert(answer.responseText);
                    loadMaskGrid.hide();
                    store.load();
                    currentRowGrid = 0;
                },
                failure: function() {
                	loadMaskGrid.hide();
                    Ext.Msg.alert("Ошибка", "Ошибка удаления записи");
                }
            })
        }
    }

	Ext.define('dataModel', {
	   	extend: 'Ext.data.Model',
	   	fields: [
			{name: 'id', type: 'integer'},
			{name: 'sequence', type: 'integer'},
			{name: 'parent', type: 'string'},
			{name: 'name', type: 'string'},
			{name: 'dateChange', type: 'string'},
			{name: 'dateCreate', type: 'string'}
		]
	});

	var store = new Ext.data.Store({
		autoLoad: true,
		model: 'dataModel',
        proxy: {
        	url : URLcategoriesAll,
        	type: 'ajax',
        	reader: {
        		type: 'json',
        		root: 'categories',
        		totalProperty: 'total'
			}
		},
		listeners: {
			'update': function(obj, record, operation, opt) {
				loadMaskGrid.show();
				Ext.Ajax.request({
					url: URLcategoriesEdit,
                    method: 'POST',
                    params: {
                        id: record.data['id'],
                        sequence: record.data['sequence'],
                        parent: record.data['parent'],
                        name: record.data['name']
                    },
                    success: function(answer) {
                        //alert(answer.responseText);
                    },
                    failure: function() {
                        Ext.Msg.alert("Ошибка", 'Не удалось обновить данные');
                    },
                    callback: function() {
                        loadMaskGrid.hide();
                    }
				});
			}
		}
	});

	var newCategory = Ext.create('Ext.window.Window', {
		title: "Создание новой категории или статьи",
		defaultType: 'textfield',
		width: 400,
        height: 220,
        items: [
            {
                xtype: 'combo',
                fieldLabel: 'категория (родитель)',
                store: <?=$this->categoriesList?>,
                width: 380,
                labelWidth: 150,
                itemId: 'parent'
            },{
                fieldLabel: 'подкатегория (потомок)',
                width: 380,
                labelWidth: 150,
                itemId: 'name'
            },{
                xtype: 'container',
                html: 'Чтобы создать КОРНЕВУЮ директорию, напишите ее имя в поле ' +
                    '"подкатегория (потомок)", а поле "категория (родитель)" ' +
                    'оставьте пустым. Вы также можете создать категорию-потомок ' +
                    'от не существующей категории-родителя, впишите их имена в ' +
                    'соответствующие поля и они будут созданы за одно действие.'
            }],
		buttons:
        [
            {
                text: 'Создать новый ресурс',
                handler: function() {
                    newCategory.hide();
                    loadMaskGrid.show();
                    Ext.Ajax.request({
                        url: URLcategoriesAdd,
                        method: 'POST',
                        params: {
                            parent: newCategory.getComponent('parent').getValue(),
                            name: newCategory.getComponent('name').getValue()
                        },
                        success: function(answer) {
                            //alert(answer.responseText);
                            loadMaskGrid.hide();
                            store.load();
                        },
                        failure: function() {
                            Ext.Msg.alert("Ошибка", "Ошибка создания категории");
                            loadMaskGrid.hide();
                        }
                    })
                }
            },{
                text: 'Закрыть окно',
                handler: function() {
                    newCategory.hide();
                }
            }
        ]
	});

	var menu = new Ext.Panel({
        title: 'Навигация по спискам',
        defaults: {
        	width: 190
        },
        style: {
			textAlign: 'center',
            display: 'block'
		},
        items: [
        	new Ext.form.Label({
                html: 'Список корневых категорий'
        	}),
        	new Ext.form.field.ComboBox({
        		store: <?=$this->categoriesListRoot?>,
        		listeners: {
        			'select': function(field, value, opt) {
        				store.load({
        					url:URLcategoriesAll + '?category=' + field.getValue()
        				});
        			}
        		}
        	}),
        	new Ext.form.Label({
                html: 'Список детей категории'
        	}),
        	new Ext.form.field.ComboBox({
        		store: <?=$this->categoriesChildList?>,
        		listeners: {
        			'select': function(field, value, opt) {
        				store.load({
        					url:URLcategoriesAll + '?category=' + field.getValue()
        				});
        			}
        		}
        	})
        ]
	});

	// Таблица управления категориями
	var grid = Ext.create('Ext.grid.Panel', {
		title: 'Редактирование категорий/подкатегорий сайта',
		store: store,
		columns: [
			{
				header: 'ID',
				dataIndex: 'id',
				align: 'right',
				width: 80
			},{
				header: 'Порядок',
				dataIndex: 'sequence',
				align: 'right',
				width: 80,
				field: 'textfield'
			},{
				header: 'Родитель',
				dataIndex: 'parent',
				align: 'right',
				width: 150,
				field: 'textfield'
			},{
				header: 'Имя',
				dataIndex: 'name',
				align: 'right',
				width: 200,
				field: 'textfield'
			},{
				header: 'Время изменения',
				dataIndex: 'dateChange',
				align: 'right',
				width: 200,
				field: 'textfield'
			},{
				header: 'Время создания',
				dataIndex: 'dateCreate',
				align: 'right',
				width: 200,
				field: 'textfield'
			}
		],
		plugins: [
        	Ext.create('Ext.grid.plugin.CellEditing', {
	            clicksToEdit: 2,
	            listeners: {
	                beforeedit: function(e, editor) {
	                    if (e.field == 'dateChange' || e.field == 'dateCreate')
                            return false;
	                }
	            }
    	    })
    	],
		dockedItems: [{
	       	xtype: 'pagingtoolbar',
	       	store: store,
	       	dock: 'bottom',
			displayInfo: true
		}],
		buttons: [{
			text: 'создать новый раздел',
			handler: function() {
				newCategory.show();
			}
		},{
			text: 'удалить выбранный раздел',
			handler: function() {
				if (currentRowGrid == 0)
                    Ext.MessageBox.alert('Ошибка', 'Необходимо выбрать строку для удаления!');
                else {
                    Ext.MessageBox.confirm('Подтверждение выполнения', 'Вы действительно хотите удалить выделенную запись?', confirmDelete);
                }
			}
		},{
			text: 'показать все разделы',
			handler: function() {
                store.load({url:URLcategoriesAll});
            }
		}],
		listeners: {
			'itemclick' : (function(obj, record, item, index, event, opt) {
				currentRowGrid = record.data['id'];
			})
		}
	});

    var statistics = Ext.create('Ext.panel.Panel', {
        title: 'статистика',
        width: 200,
        layout: {
            type: 'table',
            columns: 2
        },
        items: [{
            html: 'Всего категорий',
            width: 160
        },{
            html: '<?=$this->cntAll?>',
            width: 38,
            style: {
                textAlign: 'right'
            }
        },{
            html: 'Корневых категорий',
            width: 160
        },{
            html: '<?=$this->cntRoot?>',
            width: 38,
            style: {
                textAlign: 'right'
            }
        }]
    });

	var viewport = Ext.create('Ext.container.Viewport', {
		layout: 'border',
		items: [{
            region: 'north',
            items: linksBar
    	},{
			region: 'west',
			itemId: 'westMenuPanel',
			width: 200,
			items: [menu, statistics]
		},{
			region: 'center',
			itemId: 'centerMenuPanel',
			items: grid
		}]
	});

	grid.setHeight(viewport.getComponent('centerMenuPanel').getHeight());
	grid.setWidth(viewport.getComponent('centerMenuPanel').getWidth());
});
</script>