<script language="javascript" type="text/javascript">
Ext.onReady(function() {

	var loadMaskGrid = new Ext.LoadMask(
	    Ext.getBody(),
	    {
	        msg: 'Пожалуйста, подождите. Идет загрузка ...'
	    });

	function folderFormat(f)
	{
		if (f == 0) return 'файл/статья';
        if (f == 1) return 'папка';
	}

	Ext.define('dataModel', {
	   	extend: 'Ext.data.Model',
	   	fields: [
			{name: 'id', type: 'integer'},
			{name: 'sequence', type: 'integer'},
			{name: 'folder', type: 'string'},
			{name: 'parent', type: 'string'},
			{name: 'name', type: 'string'}
		]
	});

	var URLcategoriesAll = '/admin/categoriesView';

	var store = new Ext.data.Store({
		autoLoad: true,
		model: 'dataModel',
        proxy: {
        	url : URLcategoriesAll,
        	type: 'ajax',
        	reader: {
        		type: 'json',
        		root: 'categories',
        		totalProperty: 'total'
			}
		}
	});

	var menu = new Ext.Panel({
        title: 'Навигация по спискам',
        items: [
        	new Ext.form.Label({
                html: 'список корневых категорий'
        	}),
        	new Ext.form.field.ComboBox({
        		store: [["q","q"],["w","w"]]
        	})
        ]
	});

	var grid = Ext.create('Ext.grid.Panel', {
		title: 'Редактирование категорий/подкатегорий сайта',
		loadMask: loadMaskGrid,
		store: store,
		columns: [
			{header: 'id', dataIndex: 'id'},
			{header: 'порядок', dataIndex: 'sequence'},
			{header: 'тип данных', dataIndex: 'folder', renderer: folderFormat},
			{header: 'родитель', dataIndex: 'parent'},
			{header: 'имя', dataIndex: 'name'}
		],
		dockedItems: [{
	       	xtype: 'pagingtoolbar',
	       	store: store,
	       	dock: 'bottom',
			displayInfo: true
		}],
		buttons: [{
			text: 'создать новый раздел'
		},{
			text: 'удалить выбранный раздел'
		},{
			text: 'показать все разделы',
			handler: function() {
                store.load();
            }
		}]
	});

	var viewport = Ext.create('Ext.container.Viewport', {
		layout: 'border',
		items: [{
			region: 'west',
			itemId: 'westMenuPanel',
			width: 200,
			items: menu
		},{
			region: 'center',
			itemId: 'centerMenuPanel',
			items: grid
		}]
	});

	grid.setHeight(viewport.getComponent('centerMenuPanel').getHeight());
	grid.setWidth(viewport.getComponent('centerMenuPanel').getWidth());
	alert('<?=$this->books?>');
});
</script>